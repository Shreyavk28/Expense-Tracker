{"ast":null,"code":"var _jsxFileName = \"D:\\\\ALL PROJECTS\\\\expense-tracker\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { getTransactions, addTransaction, deleteTransaction, updateTransaction } from \"./api\"; // ‚ö° include updateTransaction\n// import { PieChart, Pie, Cell, Tooltip, Legend } from \"recharts\";\n// import Swal from \"sweetalert2\"; // ‚ö° import SweetAlert2\n// import \"./App.css\";\n\n// function App() {\n//   const [transactions, setTransactions] = useState([]);\n//   const [form, setForm] = useState({ title: \"\", amount: \"\", type: \"expense\", category: \"\" });\n//   const [editingId, setEditingId] = useState(null); // ‚ö° track editing\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   const fetchData = async () => {\n//     const res = await getTransactions();\n//     setTransactions(res.data);\n//   };\n\n//   const handleSubmit = async (e) => {\n//   e.preventDefault();\n//   if (!form.title || !form.amount || !form.category) return;\n\n//   if (editingId) {\n//     // ‚ö° confirm before updating\n//     Swal.fire({\n//       title: \"Update Transaction?\",\n//       text: \"Do you want to save the changes to this transaction?\",\n//       icon: \"question\",\n//       showCancelButton: true,\n//       confirmButtonColor: \"#28a745\",\n//       cancelButtonColor: \"#6c757d\",\n//       confirmButtonText: \"Yes, update it!\",\n//       cancelButtonText: \"Cancel\"\n//     }).then(async (result) => {\n//       if (result.isConfirmed) {\n//         await updateTransaction(editingId, form);\n//         setEditingId(null);\n//         setForm({ title: \"\", amount: \"\", type: \"expense\", category: \"\" });\n//         fetchData();\n//         Swal.fire(\"Updated!\", \"Transaction updated successfully.\", \"success\");\n//       }\n//     });\n//   } else {\n//     // ‚ö° add new transaction directly\n//     await addTransaction(form);\n//     setForm({ title: \"\", amount: \"\", type: \"expense\", category: \"\" });\n//     fetchData();\n//   }\n// };\n\n//   const handleDelete = async (id) => {\n//   Swal.fire({\n//     title: \"Are you sure?\",\n//     text: \"This transaction will be permanently deleted!\",\n//     icon: \"warning\",\n//     showCancelButton: true,\n//     confirmButtonColor: \"#d33\",\n//     cancelButtonColor: \"#3085d6\",\n//     confirmButtonText: \"Yes, delete it!\",\n//     cancelButtonText: \"Cancel\"\n//   }).then(async (result) => {\n//     if (result.isConfirmed) {\n//       await deleteTransaction(id);\n//       fetchData();\n//       Swal.fire(\"Deleted!\", \"The transaction has been deleted.\", \"success\");\n//     }\n//   });\n// };\n\n//   const handleEdit = (transaction) => {\n//     setForm({\n//       title: transaction.title,\n//       amount: transaction.amount,\n//       type: transaction.type,\n//       category: transaction.category,\n//     });\n//     setEditingId(transaction._id);\n//   };\n\n//   // ---- Totals ----\n//   const totalIncome = transactions\n//     .filter(t => t.type === \"income\")\n//     .reduce((sum, t) => sum + t.amount, 0);\n\n//   const totalExpense = transactions\n//     .filter(t => t.type === \"expense\")\n//     .reduce((sum, t) => sum + t.amount, 0);\n\n//   const balance = totalIncome - totalExpense;\n\n//   // ---- Expense Categories ----\n//   const expenseData = Object.values(\n//     transactions\n//       .filter(t => t.type === \"expense\")\n//       .reduce((acc, t) => {\n//         acc[t.category] = acc[t.category] || { name: t.category, value: 0 };\n//         acc[t.category].value += t.amount;\n//         return acc;\n//       }, {})\n//   );\n\n//   // ---- Income vs Expense ----\n//   const summaryData = [\n//     { name: \"Income\", value: totalIncome },\n//     { name: \"Expense\", value: totalExpense }\n//   ];\n\n//   const COLORS = [\"#0088FE\", \"#FF8042\", \"#00C49F\", \"#FFBB28\", \"#FF6384\"];\n\n//   return (\n//     <div className=\"container\">\n//       <h1 className=\"title\">Expense Tracker</h1>\n\n//       {/* Summary Cards */}\n//       <div className=\"summary\">\n//         <div className=\"card income\">Income: {totalIncome}</div>\n//         <div className=\"card expense\">Expense: {totalExpense}</div>\n//         <div className=\"card balance\">Balance: {balance}</div>\n//       </div>\n\n//       {/* Form */}\n//       <form className=\"form\" onSubmit={handleSubmit}>\n//         <input\n//           placeholder=\"Title\"\n//           value={form.title}\n//           onChange={e => setForm({ ...form, title: e.target.value })}\n//         />\n//         <input\n//           placeholder=\"Amount\"\n//           type=\"number\"\n//           value={form.amount}\n//           onChange={e => setForm({ ...form, amount: Number(e.target.value) })}\n//         />\n//         <select\n//           value={form.type}\n//           onChange={e => setForm({ ...form, type: e.target.value })}\n//         >\n//           <option value=\"expense\">Expense</option>\n//           <option value=\"income\">Income</option>\n//         </select>\n//         <input\n//           placeholder=\"Category\"\n//           value={form.category}\n//           onChange={e => setForm({ ...form, category: e.target.value })}\n//         />\n//         <button className=\"btn\" type=\"submit\">\n//           {editingId ? \"Update\" : \"Add\"} {/* ‚ö° dynamic button */}\n//         </button>\n//       </form>\n\n//       {/* Transactions Table */}\n//       <table className=\"transaction-table\">\n//         <thead>\n//           <tr>\n//             <th>Title</th>\n//             <th>Amount</th>\n//             <th>Category</th>\n//             <th>Type</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {transactions.map(t => (\n//             <tr key={t._id} className={t.type}>\n//               <td>{t.title}</td>\n//               <td>{t.amount}</td>\n//               <td>{t.category}</td>\n//               <td>{t.type}</td>\n//               <td>\n//                 <button className=\"edit-btn\" onClick={() => handleEdit(t)}>‚úèÔ∏è</button>\n//                 <button className=\"delete-btn\" onClick={() => handleDelete(t._id)}>‚ùå</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {/* Charts */}\n//       <h2>Category Breakdown (Expenses)</h2>\n//       <div className=\"chart\">\n//         <PieChart width={400} height={300}>\n//           <Pie data={expenseData} dataKey=\"value\" nameKey=\"name\" outerRadius={120}>\n//             {expenseData.map((entry, index) => (\n//               <Cell key={index} fill={COLORS[index % COLORS.length]} />\n//             ))}\n//           </Pie>\n//           <Tooltip />\n//           <Legend />\n//         </PieChart>\n//       </div>\n\n//       <h2>Income vs Expense</h2>\n//       <div className=\"chart\">\n//         <PieChart width={400} height={300}>\n//           <Pie data={summaryData} dataKey=\"value\" nameKey=\"name\" outerRadius={120}>\n//             {summaryData.map((entry, index) => (\n//               <Cell key={index} fill={COLORS[index % COLORS.length]} />\n//             ))}\n//           </Pie>\n//           <Tooltip />\n//           <Legend />\n//         </PieChart>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useEffect, useState } from \"react\";\nimport { getTransactions, addTransaction, deleteTransaction, updateTransaction } from \"./api\";\nimport { PieChart, Pie, Cell, Tooltip, Legend, BarChart, Bar, XAxis, YAxis, CartesianGrid, LineChart, Line } from \"recharts\";\nimport Swal from \"sweetalert2\";\nimport { saveAs } from \"file-saver\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [form, setForm] = useState({\n    title: \"\",\n    amount: \"\",\n    type: \"expense\",\n    category: \"\"\n  });\n  const [editingId, setEditingId] = useState(null);\n\n  // üîπ Filtering states\n  const [search, setSearch] = useState(\"\");\n  const [filterType, setFilterType] = useState(\"all\");\n  const [dateFilter, setDateFilter] = useState(\"all\");\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    const res = await getTransactions();\n    setTransactions(res.data);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!form.title || !form.amount || !form.category) return;\n    if (editingId) {\n      Swal.fire({\n        title: \"Update Transaction?\",\n        text: \"Do you want to save the changes?\",\n        icon: \"question\",\n        showCancelButton: true,\n        confirmButtonColor: \"#28a745\",\n        cancelButtonColor: \"#6c757d\",\n        confirmButtonText: \"Yes, update it!\"\n      }).then(async result => {\n        if (result.isConfirmed) {\n          await updateTransaction(editingId, form);\n          setEditingId(null);\n          setForm({\n            title: \"\",\n            amount: \"\",\n            type: \"expense\",\n            category: \"\"\n          });\n          fetchData();\n          Swal.fire(\"Updated!\", \"Transaction updated successfully.\", \"success\");\n        }\n      });\n    } else {\n      await addTransaction(form);\n      setForm({\n        title: \"\",\n        amount: \"\",\n        type: \"expense\",\n        category: \"\"\n      });\n      fetchData();\n    }\n  };\n  const handleDelete = async id => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"This transaction will be permanently deleted!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#d33\",\n      cancelButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, delete it!\"\n    }).then(async result => {\n      if (result.isConfirmed) {\n        await deleteTransaction(id);\n        fetchData();\n        Swal.fire(\"Deleted!\", \"The transaction has been deleted.\", \"success\");\n      }\n    });\n  };\n  const handleEdit = transaction => {\n    setForm({\n      title: transaction.title,\n      amount: transaction.amount,\n      type: transaction.type,\n      category: transaction.category\n    });\n    setEditingId(transaction._id);\n  };\n\n  // üîπ Filtering logic\n  const filteredTransactions = transactions.filter(t => {\n    const matchesSearch = t.title.toLowerCase().includes(search.toLowerCase()) || t.category.toLowerCase().includes(search.toLowerCase()) || t.type.toLowerCase().includes(search.toLowerCase());\n    const matchesType = filterType === \"all\" || t.type === filterType;\n    let matchesDate = true;\n    if (dateFilter !== \"all\") {\n      const today = new Date();\n      const txnDate = new Date(t.createdAt);\n      if (dateFilter === \"7days\") {\n        const last7 = new Date();\n        last7.setDate(today.getDate() - 7);\n        matchesDate = txnDate >= last7;\n      } else if (dateFilter === \"month\") {\n        matchesDate = txnDate.getMonth() === today.getMonth() && txnDate.getFullYear() === today.getFullYear();\n      } else if (dateFilter === \"year\") {\n        matchesDate = txnDate.getFullYear() === today.getFullYear();\n      }\n    }\n    return matchesSearch && matchesType && matchesDate;\n  });\n\n  // ---- Totals ----\n  const totalIncome = filteredTransactions.filter(t => t.type === \"income\").reduce((sum, t) => sum + t.amount, 0);\n  const totalExpense = filteredTransactions.filter(t => t.type === \"expense\").reduce((sum, t) => sum + t.amount, 0);\n  const balance = totalIncome - totalExpense;\n\n  // ---- Expense Categories ----\n  const expenseData = Object.values(filteredTransactions.filter(t => t.type === \"expense\").reduce((acc, t) => {\n    acc[t.category] = acc[t.category] || {\n      name: t.category,\n      value: 0\n    };\n    acc[t.category].value += t.amount;\n    return acc;\n  }, {}));\n\n  // ---- Income vs Expense ----\n  const summaryData = [{\n    name: \"Income\",\n    value: totalIncome\n  }, {\n    name: \"Expense\",\n    value: totalExpense\n  }];\n\n  // ---- Monthly Trend ----\n  const monthlyData = (() => {\n    const map = {};\n    filteredTransactions.forEach(t => {\n      if (!t.createdAt) return;\n      const date = new Date(t.createdAt);\n      const key = `${date.getMonth() + 1}/${date.getFullYear()}`;\n      if (!map[key]) map[key] = {\n        month: key,\n        income: 0,\n        expense: 0\n      };\n      if (t.type === \"income\") map[key].income += t.amount;else map[key].expense += t.amount;\n    });\n    return Object.values(map);\n  })();\n\n  // ---- Export CSV ----\n  const exportCSV = () => {\n    const headers = [\"Title\", \"Amount\", \"Category\", \"Type\", \"Date\"];\n    const rows = filteredTransactions.map(t => [t.title, t.amount, t.category, t.type, t.createdAt ? new Date(t.createdAt).toLocaleDateString() : \"‚Äî\"]);\n    const csv = [headers, ...rows].map(r => r.join(\",\")).join(\"\\n\");\n    const blob = new Blob([csv], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    saveAs(blob, \"transactions.csv\");\n  };\n\n  // ---- Export PDF ----\n  const exportPDF = () => {\n    const doc = new jsPDF();\n    doc.text(\"Transactions Report\", 14, 16);\n    doc.autoTable({\n      head: [[\"Title\", \"Amount\", \"Category\", \"Type\", \"Date\"]],\n      body: filteredTransactions.map(t => [t.title, t.amount, t.category, t.type, t.createdAt ? new Date(t.createdAt).toLocaleDateString() : \"‚Äî\"])\n    });\n    doc.save(\"transactions.pdf\");\n  };\n\n  // ---- Print Report ----\n  const printReport = () => {\n    const content = `\n      <h1>Transactions Report</h1>\n      <p><b>Total Income:</b> ${totalIncome}</p>\n      <p><b>Total Expense:</b> ${totalExpense}</p>\n      <p><b>Balance:</b> ${balance}</p>\n      <table border=\"1\" cellspacing=\"0\" cellpadding=\"5\">\n        <thead>\n          <tr>\n            <th>Title</th><th>Amount</th><th>Category</th><th>Type</th><th>Date</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${filteredTransactions.map(t => `<tr>\n                  <td>${t.title}</td>\n                  <td>${t.amount}</td>\n                  <td>${t.category}</td>\n                  <td>${t.type}</td>\n                  <td>${t.createdAt ? new Date(t.createdAt).toLocaleDateString() : \"‚Äî\"}</td>\n                </tr>`).join(\"\")}\n        </tbody>\n      </table>\n    `;\n    const win = window.open(\"\", \"_blank\");\n    win.document.write(content);\n    win.document.close();\n    win.print();\n  };\n  const COLORS = [\"#0088FE\", \"#FF8042\", \"#00C49F\", \"#FFBB28\", \"#FF6384\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Expense Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card income\",\n        children: [\"Income: \", totalIncome]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card expense\",\n        children: [\"Expense: \", totalExpense]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card balance\",\n        children: [\"Balance: \", balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"export-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportCSV,\n        children: \"\\u2B07\\uFE0F Export CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportPDF,\n        children: \"\\uD83D\\uDCC4 Export PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: printReport,\n        children: \"\\uD83D\\uDDA8\\uFE0F Print Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Title\",\n        value: form.title,\n        onChange: e => setForm({\n          ...form,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Amount\",\n        type: \"number\",\n        value: form.amount,\n        onChange: e => setForm({\n          ...form,\n          amount: Number(e.target.value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: form.type,\n        onChange: e => setForm({\n          ...form,\n          type: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"expense\",\n          children: \"Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"income\",\n          children: \"Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Category\",\n        value: form.category,\n        onChange: e => setForm({\n          ...form,\n          category: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        type: \"submit\",\n        children: editingId ? \"Update\" : \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title, category or type...\",\n        value: search,\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filterType,\n        onChange: e => setFilterType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"income\",\n          children: \"Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"expense\",\n          children: \"Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: dateFilter,\n        onChange: e => setDateFilter(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"7days\",\n          children: \"Last 7 Days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"month\",\n          children: \"This Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"year\",\n          children: \"This Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"transaction-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredTransactions.map(t => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: t.type,\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.createdAt ? new Date(t.createdAt).toLocaleDateString(\"en-GB\", {\n              day: \"2-digit\",\n              month: \"2-digit\",\n              year: \"numeric\"\n            }) : \"‚Äî\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-btn\",\n              onClick: () => handleEdit(t),\n              children: \"\\u270F\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-btn\",\n              onClick: () => handleDelete(t._id),\n              children: \"\\u274C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 15\n          }, this)]\n        }, t._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Category Breakdown (Expenses)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\",\n      children: expenseData.length > 0 ? /*#__PURE__*/_jsxDEV(PieChart, {\n        width: 400,\n        height: 300,\n        children: [/*#__PURE__*/_jsxDEV(Pie, {\n          data: expenseData,\n          dataKey: \"value\",\n          nameKey: \"name\",\n          outerRadius: 120,\n          children: expenseData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: COLORS[index % COLORS.length]\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-data\",\n        children: \"No Expense Data Available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Income vs Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\",\n      children: /*#__PURE__*/_jsxDEV(PieChart, {\n        width: 400,\n        height: 300,\n        children: [/*#__PURE__*/_jsxDEV(Pie, {\n          data: summaryData,\n          dataKey: \"value\",\n          nameKey: \"name\",\n          outerRadius: 120,\n          children: summaryData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: COLORS[index % COLORS.length]\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Monthly Trend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\",\n      children: monthlyData.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(BarChart, {\n          width: 500,\n          height: 300,\n          data: monthlyData,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"income\",\n            fill: \"#0088FE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"expense\",\n            fill: \"#FF8042\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 500,\n          height: 300,\n          data: monthlyData,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"income\",\n            stroke: \"#0088FE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"expense\",\n            stroke: \"#FF8042\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-data\",\n        children: \"No Monthly Data Available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 453,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rDcKg5Y9YGr3orvrzYywWEs2wh4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","getTransactions","addTransaction","deleteTransaction","updateTransaction","PieChart","Pie","Cell","Tooltip","Legend","BarChart","Bar","XAxis","YAxis","CartesianGrid","LineChart","Line","Swal","saveAs","jsPDF","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","transactions","setTransactions","form","setForm","title","amount","type","category","editingId","setEditingId","search","setSearch","filterType","setFilterType","dateFilter","setDateFilter","fetchData","res","data","handleSubmit","e","preventDefault","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","handleDelete","id","handleEdit","transaction","_id","filteredTransactions","filter","t","matchesSearch","toLowerCase","includes","matchesType","matchesDate","today","Date","txnDate","createdAt","last7","setDate","getDate","getMonth","getFullYear","totalIncome","reduce","sum","totalExpense","balance","expenseData","Object","values","acc","name","value","summaryData","monthlyData","map","forEach","date","key","month","income","expense","exportCSV","headers","rows","toLocaleDateString","csv","r","join","blob","Blob","exportPDF","doc","autoTable","head","body","save","printReport","content","win","window","open","document","write","close","print","COLORS","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","placeholder","onChange","target","Number","day","year","length","width","height","dataKey","nameKey","outerRadius","entry","index","fill","strokeDasharray","stroke","_c","$RefreshReg$"],"sources":["D:/ALL PROJECTS/expense-tracker/frontend/src/App.js"],"sourcesContent":["\n\n// import React, { useEffect, useState } from \"react\";\n// import { getTransactions, addTransaction, deleteTransaction, updateTransaction } from \"./api\"; // ‚ö° include updateTransaction\n// import { PieChart, Pie, Cell, Tooltip, Legend } from \"recharts\";\n// import Swal from \"sweetalert2\"; // ‚ö° import SweetAlert2\n// import \"./App.css\";\n\n// function App() {\n//   const [transactions, setTransactions] = useState([]);\n//   const [form, setForm] = useState({ title: \"\", amount: \"\", type: \"expense\", category: \"\" });\n//   const [editingId, setEditingId] = useState(null); // ‚ö° track editing\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   const fetchData = async () => {\n//     const res = await getTransactions();\n//     setTransactions(res.data);\n//   };\n\n//   const handleSubmit = async (e) => {\n//   e.preventDefault();\n//   if (!form.title || !form.amount || !form.category) return;\n\n//   if (editingId) {\n//     // ‚ö° confirm before updating\n//     Swal.fire({\n//       title: \"Update Transaction?\",\n//       text: \"Do you want to save the changes to this transaction?\",\n//       icon: \"question\",\n//       showCancelButton: true,\n//       confirmButtonColor: \"#28a745\",\n//       cancelButtonColor: \"#6c757d\",\n//       confirmButtonText: \"Yes, update it!\",\n//       cancelButtonText: \"Cancel\"\n//     }).then(async (result) => {\n//       if (result.isConfirmed) {\n//         await updateTransaction(editingId, form);\n//         setEditingId(null);\n//         setForm({ title: \"\", amount: \"\", type: \"expense\", category: \"\" });\n//         fetchData();\n//         Swal.fire(\"Updated!\", \"Transaction updated successfully.\", \"success\");\n//       }\n//     });\n//   } else {\n//     // ‚ö° add new transaction directly\n//     await addTransaction(form);\n//     setForm({ title: \"\", amount: \"\", type: \"expense\", category: \"\" });\n//     fetchData();\n//   }\n// };\n\n\n//   const handleDelete = async (id) => {\n//   Swal.fire({\n//     title: \"Are you sure?\",\n//     text: \"This transaction will be permanently deleted!\",\n//     icon: \"warning\",\n//     showCancelButton: true,\n//     confirmButtonColor: \"#d33\",\n//     cancelButtonColor: \"#3085d6\",\n//     confirmButtonText: \"Yes, delete it!\",\n//     cancelButtonText: \"Cancel\"\n//   }).then(async (result) => {\n//     if (result.isConfirmed) {\n//       await deleteTransaction(id);\n//       fetchData();\n//       Swal.fire(\"Deleted!\", \"The transaction has been deleted.\", \"success\");\n//     }\n//   });\n// };\n\n//   const handleEdit = (transaction) => {\n//     setForm({\n//       title: transaction.title,\n//       amount: transaction.amount,\n//       type: transaction.type,\n//       category: transaction.category,\n//     });\n//     setEditingId(transaction._id);\n//   };\n\n//   // ---- Totals ----\n//   const totalIncome = transactions\n//     .filter(t => t.type === \"income\")\n//     .reduce((sum, t) => sum + t.amount, 0);\n\n//   const totalExpense = transactions\n//     .filter(t => t.type === \"expense\")\n//     .reduce((sum, t) => sum + t.amount, 0);\n\n//   const balance = totalIncome - totalExpense;\n\n//   // ---- Expense Categories ----\n//   const expenseData = Object.values(\n//     transactions\n//       .filter(t => t.type === \"expense\")\n//       .reduce((acc, t) => {\n//         acc[t.category] = acc[t.category] || { name: t.category, value: 0 };\n//         acc[t.category].value += t.amount;\n//         return acc;\n//       }, {})\n//   );\n\n//   // ---- Income vs Expense ----\n//   const summaryData = [\n//     { name: \"Income\", value: totalIncome },\n//     { name: \"Expense\", value: totalExpense }\n//   ];\n\n//   const COLORS = [\"#0088FE\", \"#FF8042\", \"#00C49F\", \"#FFBB28\", \"#FF6384\"];\n\n//   return (\n//     <div className=\"container\">\n//       <h1 className=\"title\">Expense Tracker</h1>\n\n//       {/* Summary Cards */}\n//       <div className=\"summary\">\n//         <div className=\"card income\">Income: {totalIncome}</div>\n//         <div className=\"card expense\">Expense: {totalExpense}</div>\n//         <div className=\"card balance\">Balance: {balance}</div>\n//       </div>\n\n//       {/* Form */}\n//       <form className=\"form\" onSubmit={handleSubmit}>\n//         <input\n//           placeholder=\"Title\"\n//           value={form.title}\n//           onChange={e => setForm({ ...form, title: e.target.value })}\n//         />\n//         <input\n//           placeholder=\"Amount\"\n//           type=\"number\"\n//           value={form.amount}\n//           onChange={e => setForm({ ...form, amount: Number(e.target.value) })}\n//         />\n//         <select\n//           value={form.type}\n//           onChange={e => setForm({ ...form, type: e.target.value })}\n//         >\n//           <option value=\"expense\">Expense</option>\n//           <option value=\"income\">Income</option>\n//         </select>\n//         <input\n//           placeholder=\"Category\"\n//           value={form.category}\n//           onChange={e => setForm({ ...form, category: e.target.value })}\n//         />\n//         <button className=\"btn\" type=\"submit\">\n//           {editingId ? \"Update\" : \"Add\"} {/* ‚ö° dynamic button */}\n//         </button>\n//       </form>\n\n//       {/* Transactions Table */}\n//       <table className=\"transaction-table\">\n//         <thead>\n//           <tr>\n//             <th>Title</th>\n//             <th>Amount</th>\n//             <th>Category</th>\n//             <th>Type</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {transactions.map(t => (\n//             <tr key={t._id} className={t.type}>\n//               <td>{t.title}</td>\n//               <td>{t.amount}</td>\n//               <td>{t.category}</td>\n//               <td>{t.type}</td>\n//               <td>\n//                 <button className=\"edit-btn\" onClick={() => handleEdit(t)}>‚úèÔ∏è</button>\n//                 <button className=\"delete-btn\" onClick={() => handleDelete(t._id)}>‚ùå</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {/* Charts */}\n//       <h2>Category Breakdown (Expenses)</h2>\n//       <div className=\"chart\">\n//         <PieChart width={400} height={300}>\n//           <Pie data={expenseData} dataKey=\"value\" nameKey=\"name\" outerRadius={120}>\n//             {expenseData.map((entry, index) => (\n//               <Cell key={index} fill={COLORS[index % COLORS.length]} />\n//             ))}\n//           </Pie>\n//           <Tooltip />\n//           <Legend />\n//         </PieChart>\n//       </div>\n\n//       <h2>Income vs Expense</h2>\n//       <div className=\"chart\">\n//         <PieChart width={400} height={300}>\n//           <Pie data={summaryData} dataKey=\"value\" nameKey=\"name\" outerRadius={120}>\n//             {summaryData.map((entry, index) => (\n//               <Cell key={index} fill={COLORS[index % COLORS.length]} />\n//             ))}\n//           </Pie>\n//           <Tooltip />\n//           <Legend />\n//         </PieChart>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\n\n\n\n\n\n\n\nimport React, { useEffect, useState } from \"react\";\nimport { getTransactions, addTransaction, deleteTransaction, updateTransaction } from \"./api\";\nimport { PieChart, Pie, Cell, Tooltip, Legend, BarChart, Bar, XAxis, YAxis, CartesianGrid, LineChart, Line } from \"recharts\";\nimport Swal from \"sweetalert2\";\nimport { saveAs } from \"file-saver\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport \"./App.css\";\n\nfunction App() {\n  const [transactions, setTransactions] = useState([]);\n  const [form, setForm] = useState({ title: \"\", amount: \"\", type: \"expense\", category: \"\" });\n  const [editingId, setEditingId] = useState(null);\n\n  // üîπ Filtering states\n  const [search, setSearch] = useState(\"\");\n  const [filterType, setFilterType] = useState(\"all\");\n  const [dateFilter, setDateFilter] = useState(\"all\");\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    const res = await getTransactions();\n    setTransactions(res.data);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!form.title || !form.amount || !form.category) return;\n\n    if (editingId) {\n      Swal.fire({\n        title: \"Update Transaction?\",\n        text: \"Do you want to save the changes?\",\n        icon: \"question\",\n        showCancelButton: true,\n        confirmButtonColor: \"#28a745\",\n        cancelButtonColor: \"#6c757d\",\n        confirmButtonText: \"Yes, update it!\",\n      }).then(async (result) => {\n        if (result.isConfirmed) {\n          await updateTransaction(editingId, form);\n          setEditingId(null);\n          setForm({ title: \"\", amount: \"\", type: \"expense\", category: \"\" });\n          fetchData();\n          Swal.fire(\"Updated!\", \"Transaction updated successfully.\", \"success\");\n        }\n      });\n    } else {\n      await addTransaction(form);\n      setForm({ title: \"\", amount: \"\", type: \"expense\", category: \"\" });\n      fetchData();\n    }\n  };\n\n  const handleDelete = async (id) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"This transaction will be permanently deleted!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#d33\",\n      cancelButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        await deleteTransaction(id);\n        fetchData();\n        Swal.fire(\"Deleted!\", \"The transaction has been deleted.\", \"success\");\n      }\n    });\n  };\n\n  const handleEdit = (transaction) => {\n    setForm({\n      title: transaction.title,\n      amount: transaction.amount,\n      type: transaction.type,\n      category: transaction.category,\n    });\n    setEditingId(transaction._id);\n  };\n\n  // üîπ Filtering logic\n  const filteredTransactions = transactions.filter((t) => {\n    const matchesSearch =\n      t.title.toLowerCase().includes(search.toLowerCase()) ||\n      t.category.toLowerCase().includes(search.toLowerCase()) ||\n      t.type.toLowerCase().includes(search.toLowerCase());\n\n    const matchesType = filterType === \"all\" || t.type === filterType;\n\n    let matchesDate = true;\n    if (dateFilter !== \"all\") {\n      const today = new Date();\n      const txnDate = new Date(t.createdAt);\n\n      if (dateFilter === \"7days\") {\n        const last7 = new Date();\n        last7.setDate(today.getDate() - 7);\n        matchesDate = txnDate >= last7;\n      } else if (dateFilter === \"month\") {\n        matchesDate =\n          txnDate.getMonth() === today.getMonth() &&\n          txnDate.getFullYear() === today.getFullYear();\n      } else if (dateFilter === \"year\") {\n        matchesDate = txnDate.getFullYear() === today.getFullYear();\n      }\n    }\n\n    return matchesSearch && matchesType && matchesDate;\n  });\n\n  // ---- Totals ----\n  const totalIncome = filteredTransactions\n    .filter((t) => t.type === \"income\")\n    .reduce((sum, t) => sum + t.amount, 0);\n\n  const totalExpense = filteredTransactions\n    .filter((t) => t.type === \"expense\")\n    .reduce((sum, t) => sum + t.amount, 0);\n\n  const balance = totalIncome - totalExpense;\n\n  // ---- Expense Categories ----\n  const expenseData = Object.values(\n    filteredTransactions\n      .filter((t) => t.type === \"expense\")\n      .reduce((acc, t) => {\n        acc[t.category] = acc[t.category] || { name: t.category, value: 0 };\n        acc[t.category].value += t.amount;\n        return acc;\n      }, {})\n  );\n\n  // ---- Income vs Expense ----\n  const summaryData = [\n    { name: \"Income\", value: totalIncome },\n    { name: \"Expense\", value: totalExpense },\n  ];\n\n  // ---- Monthly Trend ----\n  const monthlyData = (() => {\n    const map = {};\n    filteredTransactions.forEach((t) => {\n      if (!t.createdAt) return;\n      const date = new Date(t.createdAt);\n      const key = `${date.getMonth() + 1}/${date.getFullYear()}`;\n      if (!map[key]) map[key] = { month: key, income: 0, expense: 0 };\n      if (t.type === \"income\") map[key].income += t.amount;\n      else map[key].expense += t.amount;\n    });\n    return Object.values(map);\n  })();\n\n  // ---- Export CSV ----\n  const exportCSV = () => {\n    const headers = [\"Title\", \"Amount\", \"Category\", \"Type\", \"Date\"];\n    const rows = filteredTransactions.map((t) => [\n      t.title,\n      t.amount,\n      t.category,\n      t.type,\n      t.createdAt ? new Date(t.createdAt).toLocaleDateString() : \"‚Äî\",\n    ]);\n\n    const csv = [headers, ...rows].map((r) => r.join(\",\")).join(\"\\n\");\n    const blob = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\n    saveAs(blob, \"transactions.csv\");\n  };\n\n  // ---- Export PDF ----\n  const exportPDF = () => {\n    const doc = new jsPDF();\n    doc.text(\"Transactions Report\", 14, 16);\n    doc.autoTable({\n      head: [[\"Title\", \"Amount\", \"Category\", \"Type\", \"Date\"]],\n      body: filteredTransactions.map((t) => [\n        t.title,\n        t.amount,\n        t.category,\n        t.type,\n        t.createdAt ? new Date(t.createdAt).toLocaleDateString() : \"‚Äî\",\n      ]),\n    });\n    doc.save(\"transactions.pdf\");\n  };\n\n  // ---- Print Report ----\n  const printReport = () => {\n    const content = `\n      <h1>Transactions Report</h1>\n      <p><b>Total Income:</b> ${totalIncome}</p>\n      <p><b>Total Expense:</b> ${totalExpense}</p>\n      <p><b>Balance:</b> ${balance}</p>\n      <table border=\"1\" cellspacing=\"0\" cellpadding=\"5\">\n        <thead>\n          <tr>\n            <th>Title</th><th>Amount</th><th>Category</th><th>Type</th><th>Date</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${filteredTransactions\n            .map(\n              (t) =>\n                `<tr>\n                  <td>${t.title}</td>\n                  <td>${t.amount}</td>\n                  <td>${t.category}</td>\n                  <td>${t.type}</td>\n                  <td>${t.createdAt ? new Date(t.createdAt).toLocaleDateString() : \"‚Äî\"}</td>\n                </tr>`\n            )\n            .join(\"\")}\n        </tbody>\n      </table>\n    `;\n    const win = window.open(\"\", \"_blank\");\n    win.document.write(content);\n    win.document.close();\n    win.print();\n  };\n\n  const COLORS = [\"#0088FE\", \"#FF8042\", \"#00C49F\", \"#FFBB28\", \"#FF6384\"];\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Expense Tracker</h1>\n\n      {/* Summary Cards */}\n      <div className=\"summary\">\n        <div className=\"card income\">Income: {totalIncome}</div>\n        <div className=\"card expense\">Expense: {totalExpense}</div>\n        <div className=\"card balance\">Balance: {balance}</div>\n      </div>\n\n      {/* Action Buttons */}\n      <div className=\"export-buttons\">\n        <button onClick={exportCSV}>‚¨áÔ∏è Export CSV</button>\n        <button onClick={exportPDF}>üìÑ Export PDF</button>\n        <button onClick={printReport}>üñ®Ô∏è Print Report</button>\n      </div>\n\n      {/* Form */}\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <input\n          placeholder=\"Title\"\n          value={form.title}\n          onChange={(e) => setForm({ ...form, title: e.target.value })}\n        />\n        <input\n          placeholder=\"Amount\"\n          type=\"number\"\n          value={form.amount}\n          onChange={(e) => setForm({ ...form, amount: Number(e.target.value) })}\n        />\n        <select value={form.type} onChange={(e) => setForm({ ...form, type: e.target.value })}>\n          <option value=\"expense\">Expense</option>\n          <option value=\"income\">Income</option>\n        </select>\n        <input\n          placeholder=\"Category\"\n          value={form.category}\n          onChange={(e) => setForm({ ...form, category: e.target.value })}\n        />\n        <button className=\"btn\" type=\"submit\">\n          {editingId ? \"Update\" : \"Add\"}\n        </button>\n      </form>\n\n      {/* üîπ Filtering UI */}\n      <div className=\"filter-bar\">\n        <input\n          type=\"text\"\n          placeholder=\"Search by title, category or type...\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n        />\n        <select value={filterType} onChange={(e) => setFilterType(e.target.value)}>\n          <option value=\"all\">All</option>\n          <option value=\"income\">Income</option>\n          <option value=\"expense\">Expense</option>\n        </select>\n        <select value={dateFilter} onChange={(e) => setDateFilter(e.target.value)}>\n          <option value=\"all\">All Time</option>\n          <option value=\"7days\">Last 7 Days</option>\n          <option value=\"month\">This Month</option>\n          <option value=\"year\">This Year</option>\n        </select>\n      </div>\n\n      {/* Transactions Table */}\n      <table className=\"transaction-table\">\n        <thead>\n          <tr>\n            <th>Title</th>\n            <th>Amount</th>\n            <th>Category</th>\n            <th>Type</th>\n            <th>Date</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredTransactions.map((t) => (\n            <tr key={t._id} className={t.type}>\n              <td>{t.title}</td>\n              <td>{t.amount}</td>\n              <td>{t.category}</td>\n              <td>{t.type}</td>\n              <td>\n                {t.createdAt\n                  ? new Date(t.createdAt).toLocaleDateString(\"en-GB\", {\n                      day: \"2-digit\",\n                      month: \"2-digit\",\n                      year: \"numeric\",\n                    })\n                  : \"‚Äî\"}\n              </td>\n              <td>\n                <button className=\"edit-btn\" onClick={() => handleEdit(t)}>‚úèÔ∏è</button>\n                <button className=\"delete-btn\" onClick={() => handleDelete(t._id)}>‚ùå</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {/* Charts */}\n      <h2>Category Breakdown (Expenses)</h2>\n      <div className=\"chart\">\n        {expenseData.length > 0 ? (\n          <PieChart width={400} height={300}>\n            <Pie data={expenseData} dataKey=\"value\" nameKey=\"name\" outerRadius={120}>\n              {expenseData.map((entry, index) => (\n                <Cell key={index} fill={COLORS[index % COLORS.length]} />\n              ))}\n            </Pie>\n            <Tooltip />\n            <Legend />\n          </PieChart>\n        ) : (\n          <p className=\"no-data\">No Expense Data Available</p>\n        )}\n      </div>\n\n      <h2>Income vs Expense</h2>\n      <div className=\"chart\">\n        <PieChart width={400} height={300}>\n          <Pie data={summaryData} dataKey=\"value\" nameKey=\"name\" outerRadius={120}>\n            {summaryData.map((entry, index) => (\n              <Cell key={index} fill={COLORS[index % COLORS.length]} />\n            ))}\n          </Pie>\n          <Tooltip />\n          <Legend />\n        </PieChart>\n      </div>\n\n      <h2>Monthly Trend</h2>\n      <div className=\"chart\">\n        {monthlyData.length > 0 ? (\n          <>\n            <BarChart width={500} height={300} data={monthlyData}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"month\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"income\" fill=\"#0088FE\" />\n              <Bar dataKey=\"expense\" fill=\"#FF8042\" />\n            </BarChart>\n\n            <LineChart width={500} height={300} data={monthlyData}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"month\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Line type=\"monotone\" dataKey=\"income\" stroke=\"#0088FE\" />\n              <Line type=\"monotone\" dataKey=\"expense\" stroke=\"#FF8042\" />\n            </LineChart>\n          </>\n        ) : (\n          <p className=\"no-data\">No Monthly Data Available</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAYA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,eAAe,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,iBAAiB,QAAQ,OAAO;AAC7F,SAASC,QAAQ,EAAEC,GAAG,EAAEC,IAAI,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}