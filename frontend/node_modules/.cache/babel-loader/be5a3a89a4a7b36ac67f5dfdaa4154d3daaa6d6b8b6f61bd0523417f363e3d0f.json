{"ast":null,"code":"var _jsxFileName = \"D:\\\\ALL PROJECTS\\\\expense-tracker\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { getTransactions, addTransaction, deleteTransaction, updateTransaction } from \"./api\"; // ‚ö° include updateTransaction\n// import { PieChart, Pie, Cell, Tooltip, Legend } from \"recharts\";\n// import Swal from \"sweetalert2\"; // ‚ö° import SweetAlert2\n// import \"./App.css\";\n\n// function App() {\n//   const [transactions, setTransactions] = useState([]);\n//   const [form, setForm] = useState({ title: \"\", amount: \"\", type: \"expense\", category: \"\" });\n//   const [editingId, setEditingId] = useState(null); // ‚ö° track editing\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   const fetchData = async () => {\n//     const res = await getTransactions();\n//     setTransactions(res.data);\n//   };\n\n//   const handleSubmit = async (e) => {\n//   e.preventDefault();\n//   if (!form.title || !form.amount || !form.category) return;\n\n//   if (editingId) {\n//     // ‚ö° confirm before updating\n//     Swal.fire({\n//       title: \"Update Transaction?\",\n//       text: \"Do you want to save the changes to this transaction?\",\n//       icon: \"question\",\n//       showCancelButton: true,\n//       confirmButtonColor: \"#28a745\",\n//       cancelButtonColor: \"#6c757d\",\n//       confirmButtonText: \"Yes, update it!\",\n//       cancelButtonText: \"Cancel\"\n//     }).then(async (result) => {\n//       if (result.isConfirmed) {\n//         await updateTransaction(editingId, form);\n//         setEditingId(null);\n//         setForm({ title: \"\", amount: \"\", type: \"expense\", category: \"\" });\n//         fetchData();\n//         Swal.fire(\"Updated!\", \"Transaction updated successfully.\", \"success\");\n//       }\n//     });\n//   } else {\n//     // ‚ö° add new transaction directly\n//     await addTransaction(form);\n//     setForm({ title: \"\", amount: \"\", type: \"expense\", category: \"\" });\n//     fetchData();\n//   }\n// };\n\n//   const handleDelete = async (id) => {\n//   Swal.fire({\n//     title: \"Are you sure?\",\n//     text: \"This transaction will be permanently deleted!\",\n//     icon: \"warning\",\n//     showCancelButton: true,\n//     confirmButtonColor: \"#d33\",\n//     cancelButtonColor: \"#3085d6\",\n//     confirmButtonText: \"Yes, delete it!\",\n//     cancelButtonText: \"Cancel\"\n//   }).then(async (result) => {\n//     if (result.isConfirmed) {\n//       await deleteTransaction(id);\n//       fetchData();\n//       Swal.fire(\"Deleted!\", \"The transaction has been deleted.\", \"success\");\n//     }\n//   });\n// };\n\n//   const handleEdit = (transaction) => {\n//     setForm({\n//       title: transaction.title,\n//       amount: transaction.amount,\n//       type: transaction.type,\n//       category: transaction.category,\n//     });\n//     setEditingId(transaction._id);\n//   };\n\n//   // ---- Totals ----\n//   const totalIncome = transactions\n//     .filter(t => t.type === \"income\")\n//     .reduce((sum, t) => sum + t.amount, 0);\n\n//   const totalExpense = transactions\n//     .filter(t => t.type === \"expense\")\n//     .reduce((sum, t) => sum + t.amount, 0);\n\n//   const balance = totalIncome - totalExpense;\n\n//   // ---- Expense Categories ----\n//   const expenseData = Object.values(\n//     transactions\n//       .filter(t => t.type === \"expense\")\n//       .reduce((acc, t) => {\n//         acc[t.category] = acc[t.category] || { name: t.category, value: 0 };\n//         acc[t.category].value += t.amount;\n//         return acc;\n//       }, {})\n//   );\n\n//   // ---- Income vs Expense ----\n//   const summaryData = [\n//     { name: \"Income\", value: totalIncome },\n//     { name: \"Expense\", value: totalExpense }\n//   ];\n\n//   const COLORS = [\"#0088FE\", \"#FF8042\", \"#00C49F\", \"#FFBB28\", \"#FF6384\"];\n\n//   return (\n//     <div className=\"container\">\n//       <h1 className=\"title\">Expense Tracker</h1>\n\n//       {/* Summary Cards */}\n//       <div className=\"summary\">\n//         <div className=\"card income\">Income: {totalIncome}</div>\n//         <div className=\"card expense\">Expense: {totalExpense}</div>\n//         <div className=\"card balance\">Balance: {balance}</div>\n//       </div>\n\n//       {/* Form */}\n//       <form className=\"form\" onSubmit={handleSubmit}>\n//         <input\n//           placeholder=\"Title\"\n//           value={form.title}\n//           onChange={e => setForm({ ...form, title: e.target.value })}\n//         />\n//         <input\n//           placeholder=\"Amount\"\n//           type=\"number\"\n//           value={form.amount}\n//           onChange={e => setForm({ ...form, amount: Number(e.target.value) })}\n//         />\n//         <select\n//           value={form.type}\n//           onChange={e => setForm({ ...form, type: e.target.value })}\n//         >\n//           <option value=\"expense\">Expense</option>\n//           <option value=\"income\">Income</option>\n//         </select>\n//         <input\n//           placeholder=\"Category\"\n//           value={form.category}\n//           onChange={e => setForm({ ...form, category: e.target.value })}\n//         />\n//         <button className=\"btn\" type=\"submit\">\n//           {editingId ? \"Update\" : \"Add\"} {/* ‚ö° dynamic button */}\n//         </button>\n//       </form>\n\n//       {/* Transactions Table */}\n//       <table className=\"transaction-table\">\n//         <thead>\n//           <tr>\n//             <th>Title</th>\n//             <th>Amount</th>\n//             <th>Category</th>\n//             <th>Type</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {transactions.map(t => (\n//             <tr key={t._id} className={t.type}>\n//               <td>{t.title}</td>\n//               <td>{t.amount}</td>\n//               <td>{t.category}</td>\n//               <td>{t.type}</td>\n//               <td>\n//                 <button className=\"edit-btn\" onClick={() => handleEdit(t)}>‚úèÔ∏è</button>\n//                 <button className=\"delete-btn\" onClick={() => handleDelete(t._id)}>‚ùå</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {/* Charts */}\n//       <h2>Category Breakdown (Expenses)</h2>\n//       <div className=\"chart\">\n//         <PieChart width={400} height={300}>\n//           <Pie data={expenseData} dataKey=\"value\" nameKey=\"name\" outerRadius={120}>\n//             {expenseData.map((entry, index) => (\n//               <Cell key={index} fill={COLORS[index % COLORS.length]} />\n//             ))}\n//           </Pie>\n//           <Tooltip />\n//           <Legend />\n//         </PieChart>\n//       </div>\n\n//       <h2>Income vs Expense</h2>\n//       <div className=\"chart\">\n//         <PieChart width={400} height={300}>\n//           <Pie data={summaryData} dataKey=\"value\" nameKey=\"name\" outerRadius={120}>\n//             {summaryData.map((entry, index) => (\n//               <Cell key={index} fill={COLORS[index % COLORS.length]} />\n//             ))}\n//           </Pie>\n//           <Tooltip />\n//           <Legend />\n//         </PieChart>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { getTransactions, addTransaction, deleteTransaction, updateTransaction } from \"./api\";\nimport { PieChart, Pie, Cell, Tooltip, Legend, BarChart, Bar, XAxis, YAxis, CartesianGrid, LineChart, Line } from \"recharts\";\nimport Swal from \"sweetalert2\";\nimport { saveAs } from \"file-saver\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [form, setForm] = useState({\n    title: \"\",\n    amount: \"\",\n    type: \"expense\",\n    category: \"\"\n  });\n  const [editingId, setEditingId] = useState(null);\n\n  // üîπ Filtering states\n  const [search, setSearch] = useState(\"\");\n  const [filterType, setFilterType] = useState(\"all\");\n  const [dateFilter, setDateFilter] = useState(\"all\");\n  const [showExportMenu, setShowExportMenu] = useState(false);\n\n  // üîπ Ref for export dropdown\n  const dropdownRef = useRef(null);\n  useEffect(() => {\n    fetchData();\n\n    // Auto-close dropdown when clicking outside\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setShowExportMenu(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n  const fetchData = async () => {\n    const res = await getTransactions();\n    setTransactions(res.data);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!form.title || !form.amount || !form.category) return;\n    if (editingId) {\n      Swal.fire({\n        title: \"Update Transaction?\",\n        text: \"Do you want to save the changes?\",\n        icon: \"question\",\n        showCancelButton: true,\n        confirmButtonColor: \"#28a745\",\n        cancelButtonColor: \"#6c757d\",\n        confirmButtonText: \"Yes, update it!\"\n      }).then(async result => {\n        if (result.isConfirmed) {\n          await updateTransaction(editingId, form);\n          setEditingId(null);\n          setForm({\n            title: \"\",\n            amount: \"\",\n            type: \"expense\",\n            category: \"\"\n          });\n          fetchData();\n          Swal.fire(\"Updated!\", \"Transaction updated successfully.\", \"success\");\n        }\n      });\n    } else {\n      await addTransaction(form);\n      setForm({\n        title: \"\",\n        amount: \"\",\n        type: \"expense\",\n        category: \"\"\n      });\n      fetchData();\n    }\n  };\n  const handleDelete = async id => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"This transaction will be permanently deleted!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#d33\",\n      cancelButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, delete it!\"\n    }).then(async result => {\n      if (result.isConfirmed) {\n        await deleteTransaction(id);\n        fetchData();\n        Swal.fire(\"Deleted!\", \"The transaction has been deleted.\", \"success\");\n      }\n    });\n  };\n  const handleEdit = transaction => {\n    setForm({\n      title: transaction.title,\n      amount: transaction.amount,\n      type: transaction.type,\n      category: transaction.category\n    });\n    setEditingId(transaction._id);\n  };\n\n  // üîπ Filtering logic\n  const filteredTransactions = transactions.filter(t => {\n    const matchesSearch = t.title.toLowerCase().includes(search.toLowerCase()) || t.category.toLowerCase().includes(search.toLowerCase()) || t.type.toLowerCase().includes(search.toLowerCase());\n    const matchesType = filterType === \"all\" || t.type === filterType;\n    let matchesDate = true;\n    if (dateFilter !== \"all\") {\n      const today = new Date();\n      const txnDate = new Date(t.createdAt);\n      if (dateFilter === \"7days\") {\n        const last7 = new Date();\n        last7.setDate(today.getDate() - 7);\n        matchesDate = txnDate >= last7;\n      } else if (dateFilter === \"month\") {\n        matchesDate = txnDate.getMonth() === today.getMonth() && txnDate.getFullYear() === today.getFullYear();\n      } else if (dateFilter === \"year\") {\n        matchesDate = txnDate.getFullYear() === today.getFullYear();\n      }\n    }\n    return matchesSearch && matchesType && matchesDate;\n  });\n\n  // ---- Totals ----\n  const totalIncome = filteredTransactions.filter(t => t.type === \"income\").reduce((sum, t) => sum + t.amount, 0);\n  const totalExpense = filteredTransactions.filter(t => t.type === \"expense\").reduce((sum, t) => sum + t.amount, 0);\n  const balance = totalIncome - totalExpense;\n\n  // ---- Expense Categories ----\n  const expenseData = Object.values(filteredTransactions.filter(t => t.type === \"expense\").reduce((acc, t) => {\n    acc[t.category] = acc[t.category] || {\n      name: t.category,\n      value: 0\n    };\n    acc[t.category].value += t.amount;\n    return acc;\n  }, {}));\n\n  // ---- Income vs Expense ----\n  const summaryData = [{\n    name: \"Income\",\n    value: totalIncome\n  }, {\n    name: \"Expense\",\n    value: totalExpense\n  }];\n\n  // ---- Monthly Trend ----\n  const monthlyData = (() => {\n    const map = {};\n    filteredTransactions.forEach(t => {\n      if (!t.createdAt) return;\n      const date = new Date(t.createdAt);\n      const key = `${date.getMonth() + 1}/${date.getFullYear()}`;\n      if (!map[key]) map[key] = {\n        month: key,\n        income: 0,\n        expense: 0\n      };\n      if (t.type === \"income\") map[key].income += t.amount;else map[key].expense += t.amount;\n    });\n    return Object.values(map);\n  })();\n\n  // ---- Export CSV ----\n  const exportCSV = () => {\n    const headers = [\"Title\", \"Amount\", \"Category\", \"Type\", \"Date\"];\n    const rows = filteredTransactions.map(t => [t.title, t.amount, t.category, t.type, t.createdAt ? new Date(t.createdAt).toLocaleDateString() : \"‚Äî\"]);\n    const csv = [headers, ...rows].map(r => r.join(\",\")).join(\"\\n\");\n    const blob = new Blob([csv], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    saveAs(blob, \"transactions.csv\");\n  };\n\n  // ---- Export PDF ----\n  const exportPDF = () => {\n    const doc = new jsPDF();\n    doc.text(\"Transactions Report\", 14, 16);\n    doc.autoTable({\n      head: [[\"Title\", \"Amount\", \"Category\", \"Type\", \"Date\"]],\n      body: filteredTransactions.map(t => [t.title, t.amount, t.category, t.type, t.createdAt ? new Date(t.createdAt).toLocaleDateString() : \"‚Äî\"])\n    });\n    doc.save(\"transactions.pdf\");\n  };\n\n  // ---- Print Report ----\n  const printReport = () => {\n    const content = `\n      <h1>Transactions Report</h1>\n      <p><b>Total Income:</b> ${totalIncome}</p>\n      <p><b>Total Expense:</b> ${totalExpense}</p>\n      <p><b>Balance:</b> ${balance}</p>\n      <table border=\"1\" cellspacing=\"0\" cellpadding=\"5\">\n        <thead>\n          <tr>\n            <th>Title</th><th>Amount</th><th>Category</th><th>Type</th><th>Date</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${filteredTransactions.map(t => `<tr>\n                  <td>${t.title}</td>\n                  <td>${t.amount}</td>\n                  <td>${t.category}</td>\n                  <td>${t.type}</td>\n                  <td>${t.createdAt ? new Date(t.createdAt).toLocaleDateString() : \"‚Äî\"}</td>\n                </tr>`).join(\"\")}\n        </tbody>\n      </table>\n    `;\n    const win = window.open(\"\", \"_blank\");\n    win.document.write(content);\n    win.document.close();\n    win.print();\n  };\n  const COLORS = [\"#0088FE\", \"#FF8042\", \"#00C49F\", \"#FFBB28\", \"#FF6384\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Expense Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card income\",\n        children: [\"Income: \", totalIncome]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card expense\",\n        children: [\"Expense: \", totalExpense]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card balance\",\n        children: [\"Balance: \", balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"export-dropdown\",\n      ref: dropdownRef,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowExportMenu(!showExportMenu),\n        children: \"\\u2B07\\uFE0F Export Options \\u25BE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this), showExportMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: exportCSV,\n          children: \"\\uD83D\\uDCD1 Export CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: exportPDF,\n          children: \"\\uD83D\\uDCC4 Export PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: printReport,\n          children: \"\\uD83D\\uDDA8\\uFE0F Print Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Title\",\n        value: form.title,\n        onChange: e => setForm({\n          ...form,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Amount\",\n        type: \"number\",\n        value: form.amount,\n        onChange: e => setForm({\n          ...form,\n          amount: Number(e.target.value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: form.type,\n        onChange: e => setForm({\n          ...form,\n          type: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"expense\",\n          children: \"Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"income\",\n          children: \"Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Category\",\n        value: form.category,\n        onChange: e => setForm({\n          ...form,\n          category: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        type: \"submit\",\n        children: editingId ? \"Update\" : \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title, category or type...\",\n        value: search,\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filterType,\n        onChange: e => setFilterType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"income\",\n          children: \"Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"expense\",\n          children: \"Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: dateFilter,\n        onChange: e => setDateFilter(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"7days\",\n          children: \"Last 7 Days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"month\",\n          children: \"This Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"year\",\n          children: \"This Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"transaction-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredTransactions.map(t => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: t.type,\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.createdAt ? new Date(t.createdAt).toLocaleDateString(\"en-GB\", {\n              day: \"2-digit\",\n              month: \"2-digit\",\n              year: \"numeric\"\n            }) : \"‚Äî\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-btn\",\n              onClick: () => handleEdit(t),\n              children: \"\\u270F\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-btn\",\n              onClick: () => handleDelete(t._id),\n              children: \"\\u274C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 15\n          }, this)]\n        }, t._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Category Breakdown (Expenses)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\",\n      children: expenseData.length > 0 ? /*#__PURE__*/_jsxDEV(PieChart, {\n        width: 400,\n        height: 300,\n        children: [/*#__PURE__*/_jsxDEV(Pie, {\n          data: expenseData,\n          dataKey: \"value\",\n          nameKey: \"name\",\n          outerRadius: 120,\n          children: expenseData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: COLORS[index % COLORS.length]\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-data\",\n        children: \"No Expense Data Available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Income vs Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\",\n      children: /*#__PURE__*/_jsxDEV(PieChart, {\n        width: 400,\n        height: 300,\n        children: [/*#__PURE__*/_jsxDEV(Pie, {\n          data: summaryData,\n          dataKey: \"value\",\n          nameKey: \"name\",\n          outerRadius: 120,\n          children: summaryData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: COLORS[index % COLORS.length]\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Monthly Trend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\",\n      children: monthlyData.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(BarChart, {\n          width: 500,\n          height: 300,\n          data: monthlyData,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"income\",\n            fill: \"#0088FE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"expense\",\n            fill: \"#FF8042\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 500,\n          height: 300,\n          data: monthlyData,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"income\",\n            stroke: \"#0088FE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"expense\",\n            stroke: \"#FF8042\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-data\",\n        children: \"No Monthly Data Available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 468,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"E6K0dZrRuizhhNaJY+t/s6FoLhc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","getTransactions","addTransaction","deleteTransaction","updateTransaction","PieChart","Pie","Cell","Tooltip","Legend","BarChart","Bar","XAxis","YAxis","CartesianGrid","LineChart","Line","Swal","saveAs","jsPDF","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","transactions","setTransactions","form","setForm","title","amount","type","category","editingId","setEditingId","search","setSearch","filterType","setFilterType","dateFilter","setDateFilter","showExportMenu","setShowExportMenu","dropdownRef","fetchData","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","res","data","handleSubmit","e","preventDefault","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","handleDelete","id","handleEdit","transaction","_id","filteredTransactions","filter","t","matchesSearch","toLowerCase","includes","matchesType","matchesDate","today","Date","txnDate","createdAt","last7","setDate","getDate","getMonth","getFullYear","totalIncome","reduce","sum","totalExpense","balance","expenseData","Object","values","acc","name","value","summaryData","monthlyData","map","forEach","date","key","month","income","expense","exportCSV","headers","rows","toLocaleDateString","csv","r","join","blob","Blob","exportPDF","doc","autoTable","head","body","save","printReport","content","win","window","open","write","close","print","COLORS","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","onSubmit","placeholder","onChange","Number","day","year","length","width","height","dataKey","nameKey","outerRadius","entry","index","fill","strokeDasharray","stroke","_c","$RefreshReg$"],"sources":["D:/ALL PROJECTS/expense-tracker/frontend/src/App.js"],"sourcesContent":["\n\n// import React, { useEffect, useState } from \"react\";\n// import { getTransactions, addTransaction, deleteTransaction, updateTransaction } from \"./api\"; // ‚ö° include updateTransaction\n// import { PieChart, Pie, Cell, Tooltip, Legend } from \"recharts\";\n// import Swal from \"sweetalert2\"; // ‚ö° import SweetAlert2\n// import \"./App.css\";\n\n// function App() {\n//   const [transactions, setTransactions] = useState([]);\n//   const [form, setForm] = useState({ title: \"\", amount: \"\", type: \"expense\", category: \"\" });\n//   const [editingId, setEditingId] = useState(null); // ‚ö° track editing\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   const fetchData = async () => {\n//     const res = await getTransactions();\n//     setTransactions(res.data);\n//   };\n\n//   const handleSubmit = async (e) => {\n//   e.preventDefault();\n//   if (!form.title || !form.amount || !form.category) return;\n\n//   if (editingId) {\n//     // ‚ö° confirm before updating\n//     Swal.fire({\n//       title: \"Update Transaction?\",\n//       text: \"Do you want to save the changes to this transaction?\",\n//       icon: \"question\",\n//       showCancelButton: true,\n//       confirmButtonColor: \"#28a745\",\n//       cancelButtonColor: \"#6c757d\",\n//       confirmButtonText: \"Yes, update it!\",\n//       cancelButtonText: \"Cancel\"\n//     }).then(async (result) => {\n//       if (result.isConfirmed) {\n//         await updateTransaction(editingId, form);\n//         setEditingId(null);\n//         setForm({ title: \"\", amount: \"\", type: \"expense\", category: \"\" });\n//         fetchData();\n//         Swal.fire(\"Updated!\", \"Transaction updated successfully.\", \"success\");\n//       }\n//     });\n//   } else {\n//     // ‚ö° add new transaction directly\n//     await addTransaction(form);\n//     setForm({ title: \"\", amount: \"\", type: \"expense\", category: \"\" });\n//     fetchData();\n//   }\n// };\n\n\n//   const handleDelete = async (id) => {\n//   Swal.fire({\n//     title: \"Are you sure?\",\n//     text: \"This transaction will be permanently deleted!\",\n//     icon: \"warning\",\n//     showCancelButton: true,\n//     confirmButtonColor: \"#d33\",\n//     cancelButtonColor: \"#3085d6\",\n//     confirmButtonText: \"Yes, delete it!\",\n//     cancelButtonText: \"Cancel\"\n//   }).then(async (result) => {\n//     if (result.isConfirmed) {\n//       await deleteTransaction(id);\n//       fetchData();\n//       Swal.fire(\"Deleted!\", \"The transaction has been deleted.\", \"success\");\n//     }\n//   });\n// };\n\n//   const handleEdit = (transaction) => {\n//     setForm({\n//       title: transaction.title,\n//       amount: transaction.amount,\n//       type: transaction.type,\n//       category: transaction.category,\n//     });\n//     setEditingId(transaction._id);\n//   };\n\n//   // ---- Totals ----\n//   const totalIncome = transactions\n//     .filter(t => t.type === \"income\")\n//     .reduce((sum, t) => sum + t.amount, 0);\n\n//   const totalExpense = transactions\n//     .filter(t => t.type === \"expense\")\n//     .reduce((sum, t) => sum + t.amount, 0);\n\n//   const balance = totalIncome - totalExpense;\n\n//   // ---- Expense Categories ----\n//   const expenseData = Object.values(\n//     transactions\n//       .filter(t => t.type === \"expense\")\n//       .reduce((acc, t) => {\n//         acc[t.category] = acc[t.category] || { name: t.category, value: 0 };\n//         acc[t.category].value += t.amount;\n//         return acc;\n//       }, {})\n//   );\n\n//   // ---- Income vs Expense ----\n//   const summaryData = [\n//     { name: \"Income\", value: totalIncome },\n//     { name: \"Expense\", value: totalExpense }\n//   ];\n\n//   const COLORS = [\"#0088FE\", \"#FF8042\", \"#00C49F\", \"#FFBB28\", \"#FF6384\"];\n\n//   return (\n//     <div className=\"container\">\n//       <h1 className=\"title\">Expense Tracker</h1>\n\n//       {/* Summary Cards */}\n//       <div className=\"summary\">\n//         <div className=\"card income\">Income: {totalIncome}</div>\n//         <div className=\"card expense\">Expense: {totalExpense}</div>\n//         <div className=\"card balance\">Balance: {balance}</div>\n//       </div>\n\n//       {/* Form */}\n//       <form className=\"form\" onSubmit={handleSubmit}>\n//         <input\n//           placeholder=\"Title\"\n//           value={form.title}\n//           onChange={e => setForm({ ...form, title: e.target.value })}\n//         />\n//         <input\n//           placeholder=\"Amount\"\n//           type=\"number\"\n//           value={form.amount}\n//           onChange={e => setForm({ ...form, amount: Number(e.target.value) })}\n//         />\n//         <select\n//           value={form.type}\n//           onChange={e => setForm({ ...form, type: e.target.value })}\n//         >\n//           <option value=\"expense\">Expense</option>\n//           <option value=\"income\">Income</option>\n//         </select>\n//         <input\n//           placeholder=\"Category\"\n//           value={form.category}\n//           onChange={e => setForm({ ...form, category: e.target.value })}\n//         />\n//         <button className=\"btn\" type=\"submit\">\n//           {editingId ? \"Update\" : \"Add\"} {/* ‚ö° dynamic button */}\n//         </button>\n//       </form>\n\n//       {/* Transactions Table */}\n//       <table className=\"transaction-table\">\n//         <thead>\n//           <tr>\n//             <th>Title</th>\n//             <th>Amount</th>\n//             <th>Category</th>\n//             <th>Type</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {transactions.map(t => (\n//             <tr key={t._id} className={t.type}>\n//               <td>{t.title}</td>\n//               <td>{t.amount}</td>\n//               <td>{t.category}</td>\n//               <td>{t.type}</td>\n//               <td>\n//                 <button className=\"edit-btn\" onClick={() => handleEdit(t)}>‚úèÔ∏è</button>\n//                 <button className=\"delete-btn\" onClick={() => handleDelete(t._id)}>‚ùå</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {/* Charts */}\n//       <h2>Category Breakdown (Expenses)</h2>\n//       <div className=\"chart\">\n//         <PieChart width={400} height={300}>\n//           <Pie data={expenseData} dataKey=\"value\" nameKey=\"name\" outerRadius={120}>\n//             {expenseData.map((entry, index) => (\n//               <Cell key={index} fill={COLORS[index % COLORS.length]} />\n//             ))}\n//           </Pie>\n//           <Tooltip />\n//           <Legend />\n//         </PieChart>\n//       </div>\n\n//       <h2>Income vs Expense</h2>\n//       <div className=\"chart\">\n//         <PieChart width={400} height={300}>\n//           <Pie data={summaryData} dataKey=\"value\" nameKey=\"name\" outerRadius={120}>\n//             {summaryData.map((entry, index) => (\n//               <Cell key={index} fill={COLORS[index % COLORS.length]} />\n//             ))}\n//           </Pie>\n//           <Tooltip />\n//           <Legend />\n//         </PieChart>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\n\n\n\n\n\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { getTransactions, addTransaction, deleteTransaction, updateTransaction } from \"./api\";\nimport { PieChart, Pie, Cell, Tooltip, Legend, BarChart, Bar, XAxis, YAxis, CartesianGrid, LineChart, Line } from \"recharts\";\nimport Swal from \"sweetalert2\";\nimport { saveAs } from \"file-saver\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport \"./App.css\";\n\nfunction App() {\n  const [transactions, setTransactions] = useState([]);\n  const [form, setForm] = useState({ title: \"\", amount: \"\", type: \"expense\", category: \"\" });\n  const [editingId, setEditingId] = useState(null);\n\n  // üîπ Filtering states\n  const [search, setSearch] = useState(\"\");\n  const [filterType, setFilterType] = useState(\"all\");\n  const [dateFilter, setDateFilter] = useState(\"all\");\n  const [showExportMenu, setShowExportMenu] = useState(false);\n\n  // üîπ Ref for export dropdown\n  const dropdownRef = useRef(null);\n\n  useEffect(() => {\n    fetchData();\n\n    // Auto-close dropdown when clicking outside\n    const handleClickOutside = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setShowExportMenu(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  const fetchData = async () => {\n    const res = await getTransactions();\n    setTransactions(res.data);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!form.title || !form.amount || !form.category) return;\n\n    if (editingId) {\n      Swal.fire({\n        title: \"Update Transaction?\",\n        text: \"Do you want to save the changes?\",\n        icon: \"question\",\n        showCancelButton: true,\n        confirmButtonColor: \"#28a745\",\n        cancelButtonColor: \"#6c757d\",\n        confirmButtonText: \"Yes, update it!\",\n      }).then(async (result) => {\n        if (result.isConfirmed) {\n          await updateTransaction(editingId, form);\n          setEditingId(null);\n          setForm({ title: \"\", amount: \"\", type: \"expense\", category: \"\" });\n          fetchData();\n          Swal.fire(\"Updated!\", \"Transaction updated successfully.\", \"success\");\n        }\n      });\n    } else {\n      await addTransaction(form);\n      setForm({ title: \"\", amount: \"\", type: \"expense\", category: \"\" });\n      fetchData();\n    }\n  };\n\n  const handleDelete = async (id) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"This transaction will be permanently deleted!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#d33\",\n      cancelButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        await deleteTransaction(id);\n        fetchData();\n        Swal.fire(\"Deleted!\", \"The transaction has been deleted.\", \"success\");\n      }\n    });\n  };\n\n  const handleEdit = (transaction) => {\n    setForm({\n      title: transaction.title,\n      amount: transaction.amount,\n      type: transaction.type,\n      category: transaction.category,\n    });\n    setEditingId(transaction._id);\n  };\n\n  // üîπ Filtering logic\n  const filteredTransactions = transactions.filter((t) => {\n    const matchesSearch =\n      t.title.toLowerCase().includes(search.toLowerCase()) ||\n      t.category.toLowerCase().includes(search.toLowerCase()) ||\n      t.type.toLowerCase().includes(search.toLowerCase());\n\n    const matchesType = filterType === \"all\" || t.type === filterType;\n\n    let matchesDate = true;\n    if (dateFilter !== \"all\") {\n      const today = new Date();\n      const txnDate = new Date(t.createdAt);\n\n      if (dateFilter === \"7days\") {\n        const last7 = new Date();\n        last7.setDate(today.getDate() - 7);\n        matchesDate = txnDate >= last7;\n      } else if (dateFilter === \"month\") {\n        matchesDate =\n          txnDate.getMonth() === today.getMonth() &&\n          txnDate.getFullYear() === today.getFullYear();\n      } else if (dateFilter === \"year\") {\n        matchesDate = txnDate.getFullYear() === today.getFullYear();\n      }\n    }\n\n    return matchesSearch && matchesType && matchesDate;\n  });\n\n  // ---- Totals ----\n  const totalIncome = filteredTransactions\n    .filter((t) => t.type === \"income\")\n    .reduce((sum, t) => sum + t.amount, 0);\n\n  const totalExpense = filteredTransactions\n    .filter((t) => t.type === \"expense\")\n    .reduce((sum, t) => sum + t.amount, 0);\n\n  const balance = totalIncome - totalExpense;\n\n  // ---- Expense Categories ----\n  const expenseData = Object.values(\n    filteredTransactions\n      .filter((t) => t.type === \"expense\")\n      .reduce((acc, t) => {\n        acc[t.category] = acc[t.category] || { name: t.category, value: 0 };\n        acc[t.category].value += t.amount;\n        return acc;\n      }, {})\n  );\n\n  // ---- Income vs Expense ----\n  const summaryData = [\n    { name: \"Income\", value: totalIncome },\n    { name: \"Expense\", value: totalExpense },\n  ];\n\n  // ---- Monthly Trend ----\n  const monthlyData = (() => {\n    const map = {};\n    filteredTransactions.forEach((t) => {\n      if (!t.createdAt) return;\n      const date = new Date(t.createdAt);\n      const key = `${date.getMonth() + 1}/${date.getFullYear()}`;\n      if (!map[key]) map[key] = { month: key, income: 0, expense: 0 };\n      if (t.type === \"income\") map[key].income += t.amount;\n      else map[key].expense += t.amount;\n    });\n    return Object.values(map);\n  })();\n\n  // ---- Export CSV ----\n  const exportCSV = () => {\n    const headers = [\"Title\", \"Amount\", \"Category\", \"Type\", \"Date\"];\n    const rows = filteredTransactions.map((t) => [\n      t.title,\n      t.amount,\n      t.category,\n      t.type,\n      t.createdAt ? new Date(t.createdAt).toLocaleDateString() : \"‚Äî\",\n    ]);\n\n    const csv = [headers, ...rows].map((r) => r.join(\",\")).join(\"\\n\");\n    const blob = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\n    saveAs(blob, \"transactions.csv\");\n  };\n\n  // ---- Export PDF ----\n  const exportPDF = () => {\n    const doc = new jsPDF();\n    doc.text(\"Transactions Report\", 14, 16);\n    doc.autoTable({\n      head: [[\"Title\", \"Amount\", \"Category\", \"Type\", \"Date\"]],\n      body: filteredTransactions.map((t) => [\n        t.title,\n        t.amount,\n        t.category,\n        t.type,\n        t.createdAt ? new Date(t.createdAt).toLocaleDateString() : \"‚Äî\",\n      ]),\n    });\n    doc.save(\"transactions.pdf\");\n  };\n\n  // ---- Print Report ----\n  const printReport = () => {\n    const content = `\n      <h1>Transactions Report</h1>\n      <p><b>Total Income:</b> ${totalIncome}</p>\n      <p><b>Total Expense:</b> ${totalExpense}</p>\n      <p><b>Balance:</b> ${balance}</p>\n      <table border=\"1\" cellspacing=\"0\" cellpadding=\"5\">\n        <thead>\n          <tr>\n            <th>Title</th><th>Amount</th><th>Category</th><th>Type</th><th>Date</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${filteredTransactions\n            .map(\n              (t) =>\n                `<tr>\n                  <td>${t.title}</td>\n                  <td>${t.amount}</td>\n                  <td>${t.category}</td>\n                  <td>${t.type}</td>\n                  <td>${t.createdAt ? new Date(t.createdAt).toLocaleDateString() : \"‚Äî\"}</td>\n                </tr>`\n            )\n            .join(\"\")}\n        </tbody>\n      </table>\n    `;\n    const win = window.open(\"\", \"_blank\");\n    win.document.write(content);\n    win.document.close();\n    win.print();\n  };\n\n  const COLORS = [\"#0088FE\", \"#FF8042\", \"#00C49F\", \"#FFBB28\", \"#FF6384\"];\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Expense Tracker</h1>\n\n      {/* Summary Cards */}\n      <div className=\"summary\">\n        <div className=\"card income\">Income: {totalIncome}</div>\n        <div className=\"card expense\">Expense: {totalExpense}</div>\n        <div className=\"card balance\">Balance: {balance}</div>\n      </div>\n\n      {/* Export Dropdown */}\n      <div className=\"export-dropdown\" ref={dropdownRef}>\n        <button onClick={() => setShowExportMenu(!showExportMenu)}>‚¨áÔ∏è Export Options ‚ñæ</button>\n        {showExportMenu && (\n          <div className=\"dropdown-menu\">\n            <button onClick={exportCSV}>üìë Export CSV</button>\n            <button onClick={exportPDF}>üìÑ Export PDF</button>\n            <button onClick={printReport}>üñ®Ô∏è Print Report</button>\n          </div>\n        )}\n      </div>\n\n      {/* Form */}\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <input\n          placeholder=\"Title\"\n          value={form.title}\n          onChange={(e) => setForm({ ...form, title: e.target.value })}\n        />\n        <input\n          placeholder=\"Amount\"\n          type=\"number\"\n          value={form.amount}\n          onChange={(e) => setForm({ ...form, amount: Number(e.target.value) })}\n        />\n        <select value={form.type} onChange={(e) => setForm({ ...form, type: e.target.value })}>\n          <option value=\"expense\">Expense</option>\n          <option value=\"income\">Income</option>\n        </select>\n        <input\n          placeholder=\"Category\"\n          value={form.category}\n          onChange={(e) => setForm({ ...form, category: e.target.value })}\n        />\n        <button className=\"btn\" type=\"submit\">\n          {editingId ? \"Update\" : \"Add\"}\n        </button>\n      </form>\n\n      {/* üîπ Filtering UI */}\n      <div className=\"filter-bar\">\n        <input\n          type=\"text\"\n          placeholder=\"Search by title, category or type...\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n        />\n        <select value={filterType} onChange={(e) => setFilterType(e.target.value)}>\n          <option value=\"all\">All</option>\n          <option value=\"income\">Income</option>\n          <option value=\"expense\">Expense</option>\n        </select>\n        <select value={dateFilter} onChange={(e) => setDateFilter(e.target.value)}>\n          <option value=\"all\">All Time</option>\n          <option value=\"7days\">Last 7 Days</option>\n          <option value=\"month\">This Month</option>\n          <option value=\"year\">This Year</option>\n        </select>\n      </div>\n\n      {/* Transactions Table */}\n      <table className=\"transaction-table\">\n        <thead>\n          <tr>\n            <th>Title</th>\n            <th>Amount</th>\n            <th>Category</th>\n            <th>Type</th>\n            <th>Date</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredTransactions.map((t) => (\n            <tr key={t._id} className={t.type}>\n              <td>{t.title}</td>\n              <td>{t.amount}</td>\n              <td>{t.category}</td>\n              <td>{t.type}</td>\n              <td>\n                {t.createdAt\n                  ? new Date(t.createdAt).toLocaleDateString(\"en-GB\", {\n                      day: \"2-digit\",\n                      month: \"2-digit\",\n                      year: \"numeric\",\n                    })\n                  : \"‚Äî\"}\n              </td>\n              <td>\n                <button className=\"edit-btn\" onClick={() => handleEdit(t)}>‚úèÔ∏è</button>\n                <button className=\"delete-btn\" onClick={() => handleDelete(t._id)}>‚ùå</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {/* Charts */}\n      <h2>Category Breakdown (Expenses)</h2>\n      <div className=\"chart\">\n        {expenseData.length > 0 ? (\n          <PieChart width={400} height={300}>\n            <Pie data={expenseData} dataKey=\"value\" nameKey=\"name\" outerRadius={120}>\n              {expenseData.map((entry, index) => (\n                <Cell key={index} fill={COLORS[index % COLORS.length]} />\n              ))}\n            </Pie>\n            <Tooltip />\n            <Legend />\n          </PieChart>\n        ) : (\n          <p className=\"no-data\">No Expense Data Available</p>\n        )}\n      </div>\n\n      <h2>Income vs Expense</h2>\n      <div className=\"chart\">\n        <PieChart width={400} height={300}>\n          <Pie data={summaryData} dataKey=\"value\" nameKey=\"name\" outerRadius={120}>\n            {summaryData.map((entry, index) => (\n              <Cell key={index} fill={COLORS[index % COLORS.length]} />\n            ))}\n          </Pie>\n          <Tooltip />\n          <Legend />\n        </PieChart>\n      </div>\n\n      <h2>Monthly Trend</h2>\n      <div className=\"chart\">\n        {monthlyData.length > 0 ? (\n          <>\n            <BarChart width={500} height={300} data={monthlyData}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"month\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"income\" fill=\"#0088FE\" />\n              <Bar dataKey=\"expense\" fill=\"#FF8042\" />\n            </BarChart>\n\n            <LineChart width={500} height={300} data={monthlyData}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"month\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Line type=\"monotone\" dataKey=\"income\" stroke=\"#0088FE\" />\n              <Line type=\"monotone\" dataKey=\"expense\" stroke=\"#FF8042\" />\n            </LineChart>\n          </>\n        ) : (\n          <p className=\"no-data\">No Monthly Data Available</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAWA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,eAAe,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,iBAAiB,QAAQ,OAAO;AAC7F,SAASC,QAAQ,EAAEC,GAAG,EAAEC,IAAI,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,EAAEC,KAAK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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}